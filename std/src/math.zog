fn constants() {
  $[-10] = -10
  $[-9] = -9
  $[-8] = -8
  $[-7] = -7
  $[-6] = -6
  $[-5] = -5
  $[-4] = -4
  $[-3] = -3
  $[-2] = -2
  $[-1] = -1
  $[1] = 1
  $[2] = 2
  $[3] = 3
  $[4] = 4
  $[5] = 5
  $[6] = 6
  $[7] = 7
  $[8] = 8
  $[9] = 9
  $[10] = 10
}

fn $abs($value) {
  $[$return] = $value
  if $value < 0 {
    scoreboard players operation $return std.math.abs *= $-1 std.math.constants
  }
}

fn &abs(&value) {
  if &value < 0 {
    return &value * -1
  }
  return &value
}

fn $sign($value) {
  $[$return] = 0
  if $value < 0 {
    $[$return] = -1
  }
  if $value > 0 {
    $[$return] = 1
  }
}

fn &sign(&value) {
  if &value < 0 {
    return -1
  } else if &value > 0 {
    return 1
  }
  return 0
}

fn $min($value, $value2) {
  scoreboard players operation $return std.math.min = $value std.math.min
  scoreboard players operation $return std.math.min < $value2 std.math.min
}

fn &min(&value, &value2) {
  if &value < &value2 { return &value }
  return &value2
}

fn $max($value, $value2) {
  scoreboard players operation $return std.math.max = $value std.math.max
  scoreboard players operation $return std.math.max > $value2 std.math.max
}

fn &max(&value, &value2) {
  if &value > &value2 { return &value }
  return &value2
}

fn $clamp($value, $min, $max) {
  scoreboard players operation $return std.math.clamp = $value std.math.clamp
  scoreboard players operation $return std.math.clamp > $min std.math.clamp
  scoreboard players operation $return std.math.clamp < $max std.math.clamp
}

fn &clamp(&value, &min, &max) {
  return &min(
    &max(&value, &min),
    &max
  )
}

fn %rand(%min, %max) {
  /return run random value %min..%max
}

fn &rand(&min, &max) {
  # TODO
}

fn $pow($value, $power = 2) {
  if $power <= 0 {
    /return run scoreboard players set $return std.math.pow 1
  }

  $[$return] = $value

  if $power == $~/constants[$1] {
    /return run scoreboard players get $return std.math.pow
  }

  scoreboard players remove $power std.math.pow 1
  while $power {
    scoreboard players operation $return std.math.pow *= $return std.math.pow
    scoreboard players remove $power std.math.pow 1
  }
}

fn &pow(&value, &power) {
  # TODO
}